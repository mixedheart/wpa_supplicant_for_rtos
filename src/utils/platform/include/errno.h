/*
 * errno.h
 *
 *  Created on: 2015Äê9ÔÂ7ÈÕ
 *      Author: niuyue
 */

#ifndef INCLUDE_ERRNO_H_
#define INCLUDE_ERRNO_H_

extern int errno;
#define EDOM    1
/*
 * If a mathematical function suffers a domain error (an input
 * argument is outside the domain over which the mathematical
 * function is defined, e.g. log of a negative number) the integer
 * expression errno acquires the value of the macro EDOM.
 *
 * EDOM is also returned by ftell, fgetpos and fsetpos when they
 * fail.
 */

#define ERANGE 2
/*
 * If a mathematical function suffers a range error (the result of
 * the function is too large or too small to be accurately
 * represented in the output floating-point format), the integer
 * expression errno acquires the value of the macro ERANGE.
 *
 * ERANGE is used by functions in math.h and complex.h, and also by
 * the strto* and wcsto* family of decimal-to-binary conversion
 * functions (both floating and integer) and by floating-point
 * conversions in scanf.
 */

#define EILSEQ  4
/*
 * EILSEQ is generated by the restartable multi-byte character
 * processing routines to indicate an encoding error: that is, it is
 * generated by mbrtowc, wcrtomb, mbsrtowcs and wcsrtombs, but not
 * by mbtowc, wctomb, mbstowcs or wcsrtombs.
 *
 * It is also generated by the wide-character stdio functions:
 * fputwc, putwc, putwchar, fputws, fgetwc, getwc, getwchar, fgetws.
 */


#define ESIGNUM 3
/*
 * ESIGNUM is generated by signal() if the user attempts to change
 * the handling of a nonexistent signal. ESIGNUM is not part of the
 * ANSI C standard.
 */

#define EINVAL  5
#define ENOMEM  6
/*
 * EINVAL and ENOMEM can be generated by posix_memalign().
 */
#define EOSSPEC	7

#endif /* INCLUDE_ERRNO_H_ */
